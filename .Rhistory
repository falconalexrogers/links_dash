data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
for(j in 1:nrow(all_tickers)){
if(j/1000 == round(j/1000)){
print(paste0(j," of ",nrow(all_tickers)," tickers checked"))
}
data2 <- data1 %>%
dplyr::rename('code' = 1) %>%
rowwise() %>%
mutate(hasSymbol = str_detect(code, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)),
hasName = str_detect(code, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)),
hasSignal = hasSymbol+hasName)
if(sum(data2$hasSignal) > 0){
signal_to_add <- data.frame(ticker = all_tickers$symbol[j],
source_link = links_output$link_to_amp[i])
signals_master <- signals_master %>%
bind_rows(signal_to_add)
}
}
}
}
i <- 2
thisURL <- tryCatch({getURL(links_output$link_to_amp[i], useragent = UA, ssl.verifypeer=FALSE, timeout = 10)},
error = function(error_condition) {
'bad url connection'
})
data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
i
i <- 1
thisURL <- tryCatch({getURL(links_output$link_to_amp[i], useragent = UA, ssl.verifypeer=FALSE, timeout = 10)},
error = function(error_condition) {
'bad url connection'
})
i <- 2
thisURL <- tryCatch({getURL(links_output$link_to_amp[i], useragent = UA, ssl.verifypeer=FALSE, timeout = 10)},
error = function(error_condition) {
'bad url connection'
})
data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
data1
i <- 3
thisURL <- tryCatch({getURL(links_output$link_to_amp[i], useragent = UA, ssl.verifypeer=FALSE, timeout = 10)},
error = function(error_condition) {
'bad url connection'
})
data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
j
start <- Sys.time()
data2 <- data1 %>%
dplyr::rename('code' = 1) %>%
rowwise() %>%
mutate(hasSymbol = str_detect(code, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)),
hasName = str_detect(code, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)),
hasSignal = hasSymbol+hasName)
stop <- Sys.time()
diff <- start-stop
diff
start <- Sys.time()
hasSignal <- str_detect(code, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)) +
hasName = str_detect(code, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
hasSignal <- str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)) +
hasName = str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
hasSignal <- str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)) +
str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
start <- Sys.time()
hasSignal <- str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)) +
str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
stop <- Sys.time()
diff <- start-stop
diff
signals_master = data.frame(ticker = character(),
source_link = character())
for(i in 1:nrow(links_output)){
print(paste0(i," of ",nrow(links_output),": ",links_output$link_to_amp[i]))
thisURL <- tryCatch({getURL(links_output$link_to_amp[i], useragent = UA, ssl.verifypeer=FALSE, timeout = 10)},
error = function(error_condition) {
'bad url connection'
})
if(thisURL == 'bad url connection'){
print(paste0(links_output$link_to_amp[i]," : connection refused"))
} else {
data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
for(j in 1:nrow(all_tickers)){
if(j/1000 == round(j/1000)){
print(paste0(j," of ",nrow(all_tickers)," tickers checked"))
}
# start <- Sys.time()
hasSignal <- str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)) +
str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
# stop <- Sys.time()
# diff <- start-stop
if(sum(hasSignal) > 0){
signal_to_add <- data.frame(ticker = all_tickers$symbol[j],
source_link = links_output$link_to_amp[i])
signals_master <- signals_master %>%
bind_rows(signal_to_add)
}
}
}
}
signals_master = data.frame(ticker = character(),
source_link = character())
for(i in 1:nrow(links_output)){
print(paste0(i," of ",nrow(links_output),": ",links_output$link_to_amp[i]))
thisURL <- tryCatch({getURL(links_output$link_to_amp[i], useragent = UA, ssl.verifypeer=FALSE, timeout = 10)},
error = function(error_condition) {
'bad url connection'
})
if(thisURL == 'bad url connection'){
print(paste0(links_output$link_to_amp[i]," : connection refused"))
} else {
# data1 <- as.data.frame(strsplit(thisURL, "\n")[[1]])
for(j in 1:nrow(all_tickers)){
if(j/1000 == round(j/1000)){
print(paste0(j," of ",nrow(all_tickers)," tickers checked"))
}
# start <- Sys.time()
hasSignal <- str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$symbol[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE)) +
str_detect(thisURL, regex(paste0("[^a-zA-Z0-9_]",all_tickers$name[j],"[^a-zA-Z0-9_]"), ignore_case=FALSE))
# stop <- Sys.time()
# diff <- start-stop
if(sum(hasSignal) > 0){
signal_to_add <- data.frame(ticker = all_tickers$symbol[j],
source_link = links_output$link_to_amp[i])
signals_master <- signals_master %>%
bind_rows(signal_to_add)
}
}
}
}
length(unique(signals_master$ticker))
1.029^(12)
reticulate::repl_python()
library(shiny)
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">Info</a>',val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- cbind(rownames(mtcars), mtcars)
colnames(my_table)[1] <- 'car'
my_table$link <- createLink(my_table$car)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
library(shiny)
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- cbind(rownames(mtcars), mtcars)
colnames(my_table)[1] <- 'car'
my_table$link <- createLink(my_table$car)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
val <- 'something'
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
val
paste0('<a href="',val,'" target="_blank" class="btn btn-primary">',val,'</a>')
library("shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
links_output2 <- links_output %>%
rowwise() %>%
mutate(linkButton = createLink(link_to_amp))
View(links_output2)
runApp()
runApp()
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">Info</a>',val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- datatable(
linksTableForOut(),
options = list(
dom = 't',
# pageLength = 200,
paging = FALSE,
columnDefs = list(
list(className = 'dt-center', targets = "_all")
)
),
container = tableHeaderLinksTables,
rownames=TRUE) %>%
formatStyle( 0, target= 'row', lineHeight='70%')
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">Info</a>',val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- datatable(
links_output2 %>%
dplyr::select(linkButton),
options = list(
dom = 't',
# pageLength = 200,
paging = FALSE,
columnDefs = list(
list(className = 'dt-center', targets = "_all")
)
),
container = tableHeaderLinksTables,
rownames=TRUE) %>%
formatStyle( 0, target= 'row', lineHeight='70%')
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
val
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">Info</a>',val)
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val)
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
createLink <- function(val) {
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
}
links_output2 <- links_output %>%
rowwise() %>%
mutate(linkButton = createLink(link_to_amp))
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">Info</a>',val)
# }
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- datatable(
links_output2 %>%
dplyr::select(linkButton),
options = list(
dom = 't',
# pageLength = 200,
paging = FALSE,
columnDefs = list(
list(className = 'dt-center', targets = "_all")
)
),
container = tableHeaderLinksTables,
rownames=TRUE) %>%
formatStyle( 0, target= 'row', lineHeight='70%')
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
my_table <- cbind(rownames(mtcars), mtcars)
colnames(my_table)[1] <- 'car'
my_table$link <- createLink(my_table$car)
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">Info</a>',val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- cbind(rownames(mtcars), mtcars)
colnames(my_table)[1] <- 'car'
my_table$link <- createLink(my_table$car)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- cbind(rownames(mtcars), mtcars)
colnames(my_table)[1] <- 'car'
my_table$link <- createLink(my_table$car)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
colnames(my_table)[1]
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- cbind(rownames(links_output), links_output)
colnames(my_table)[1] <- 'link_to_amp'
my_table$link <- createLink(my_table$link_to_amp)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
View(links_output)
class(links_output)
ttt <- data.frame('link' = links_output[1])
class(ttt)
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- cbind(rownames(links_output), links_output)
colnames(my_table)[1] <- 'link_to_amp'
my_table$link <- createLink(my_table$link_to_amp)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
my_table <- cbind(rownames(links_output), links_output)
View(my_table)
my_table <- links_output
my_table$link <- createLink(my_table$link_to_amp)
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- links_output
my_table$link <- createLink(my_table$link_to_amp)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
createLink <- function(val) {
sprintf('<a href="%s" target="_blank" class="btn btn-primary">Go To Link</a>',val)
}
links_output2 <- links_output
links_output2$linkButton <- createLink(links_output2$link_to_amp)
View(links_output2)
runApp()
library(shiny)
# createLink <- function(val) {
#   sprintf('<a href="https://www.google.com/#q=%s" target="_blank" class="btn btn-primary" /a>',val)
# }
createLink <- function(val) {
sprintf('<a href="%s" target="_blank" class="btn btn-primary">%s</a>',val,val)
}
ui <- fluidPage(
titlePanel("Table with Links!"),
sidebarLayout(
sidebarPanel(
h4("Click the link in the table to see
a google search for the car.")
),
mainPanel(
dataTableOutput('table1')
)
)
)
server <- function(input, output) {
output$table1 <- renderDataTable({
my_table <- links_output
my_table$link <- createLink(my_table$link_to_amp)
return(my_table)
}, escape = FALSE)
}
shinyApp(ui, server)
runApp()
runApp()
